version: "3"
name: "scamazon"

networks:
  my_network:
    driver: bridge

volumes:
  mongo-data-home-page-service:
  mongo-data-order-processing-service:
  mongo-produkt-catalog-service:

services:
  # home-page-service:
  #   build: https://github.com/DevOps22-Grupp1/home-page-service#prometheus-fix
  #   networks:
  #     - my_network
  #   ports:
  #     - "5002:5002"
  #   depends_on:
  #     mongo-home-page-service:
  #       condition: service_healthy

  # prometheus-home-page-service:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9092:9090"
  #   networks:
  #     - my_network
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yaml

  # mongo-home-page-service:
  #   image: mongo
  #   restart: always
  #   networks:
  #     - my_network
  #   volumes:
  #     - ./mongo-data-home-page-service:/data/db
  #   healthcheck:
  #     test: echo 'mongo-home-page-service.runCommand("ping").ok' | mongosh mongo-home-page-service:27017 --quiet
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10
  #     start_period: 40s
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example

  # mongo-express-home-page-service:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - my_network
  #   depends_on:
  #     mongo-home-page-service:
  #       condition: service_healthy
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-home-page-service:27017/

  order-processing-service:
    # build: https://github.com/DevOps22-Grupp1/home-page-service#project-merge
    image: passwordnotsafe/order-processing-service:master
    ports:
      - 4007:4007
    networks:
      - my_network
    depends_on:
      mongo-order-processing-service:
        condition: service_healthy
    environment:
      - DB_HOST=mongo-order-processing-service
      - DB_PORT=4007
      - DB_USERNAME=root
      - DB_PASSWORD=example

  # prometheus-order-processing-service:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9091:9090"
  #   networks:
  #     - my_network
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yaml

  mongo-order-processing-service:
    image: mongo
    restart: always
    networks:
      - my_network
    volumes:
      - ./init/order/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-data-order-processing-service:/data/db
    healthcheck:
      test: echo 'mongo-order-processing-service.runCommand("ping").ok' | mongosh mongo-order-processing-service:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 200s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: allOrders

  mongo-express-order-processing-service:
    image: mongo-express
    restart: always
    ports:
      - 8084:8081
    networks:
      - my_network
    depends_on:
      mongo-order-processing-service:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-order-processing-service:27017/

  produkt-catalog-service:
    image: passwordnotsafe/produkt-catalog-service:master
    networks:
      - my_network
    ports:
      - 4005:4005
    depends_on:
      mongo-produkt-catalog-service:
        condition: service_healthy
    environment:
      - DB_HOST=mongo-produkt-catalog-service
      - DB_PORT=4005
      - DB_USERNAME=root
      - DB_PASSWORD=example

  # prometheus-produkt-catalog-service:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9094:9090"
  #   networks:
  #     - my_network
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yaml

  mongo-produkt-catalog-service:
    image: mongo
    restart: always
    networks:
      - my_network
    volumes:
      - ./init/product/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-data-produkt-catalog-service:/data/db
    healthcheck:
      test: echo 'mongo-produkt-catalog-service.runCommand("ping").ok' | mongosh mongo-produkt-catalog-service:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 200s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: allProducts

  mongo-express-produkt-catalog-service:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    networks:
      - my_network
    depends_on:
      mongo-produkt-catalog-service:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-produkt-catalog-service:27017/

  user-management-service:
    image: passwordnotsafe/user-management-service
    ports:
      - 4006:4006
    networks:
      - my_network
    depends_on:
      mongo-user-management-service:
        condition: service_healthy
    environment:
      - DB_HOST=mongo-user-management-service
      - DB_PORT=4006
      - DB_USERNAME=root
      - DB_PASSWORD=example

  mongo-user-management-service:
    image: mongo
    restart: always
    networks:
      - my_network
    volumes:
      - ./init/user/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-user-management-service:/data/db
    healthcheck:
      test: echo 'mongo-user-management-service.runCommand("ping").ok' | mongosh mongo-user-management-service:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 200s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: allUsers

  mongo-express-user-management-service:
    image: mongo-express
    restart: always
    ports:
      - 8083:8081
    networks:
      - my_network
    depends_on:
      mongo-user-management-service:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-user-management-service:27017/
